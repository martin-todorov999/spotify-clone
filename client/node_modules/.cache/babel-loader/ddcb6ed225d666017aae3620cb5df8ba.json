{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst useAuth = code => {\n  _s();\n\n  const history = useHistory();\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  useEffect(() => {\n    if (code) {\n      axios.post(\"http://localhost:6969/login\", {\n        code\n      }).then(res => {\n        setAccessToken(res.data.accessToken);\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        history.push(\"/\");\n      }).catch(() => {\n        history.push(\"/signin\");\n      });\n    }\n  }, [code, history]);\n  useEffect(() => {\n    if (refreshToken && expiresIn) {\n      const interval = setInterval(() => {\n        axios.post(\"http://localhost:6969/refresh\", {\n          refreshToken\n        }).then(res => {\n          setAccessToken(res.data.accessToken);\n          setExpiresIn(res.data.expiresIn);\n        }).catch(() => {\n          history.push(\"/signin\");\n        });\n      }, (expiresIn - 60) * 1000);\n      return () => clearInterval(interval);\n    }\n  }, [refreshToken, expiresIn, history]);\n  return accessToken;\n};\n\n_s(useAuth, \"sP1I0iMqO+5cVc3Vu0M9i1MzhJA=\", false, function () {\n  return [useHistory];\n});\n\nexport default useAuth;","map":{"version":3,"sources":["/home/martintodorov/workspace/mentormate/training/spotify-clone/client/src/hooks/useAuth.ts"],"names":["axios","useEffect","useState","useHistory","useAuth","code","history","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","post","then","res","data","push","catch","interval","setInterval","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAyB;AAAA;;AACvC,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,IAAJ,EAAU;AACRL,MAAAA,KAAK,CACFa,IADH,CACQ,6BADR,EACuC;AACnCR,QAAAA;AADmC,OADvC,EAIGS,IAJH,CAISC,GAAD,IAAS;AACbP,QAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAG,QAAAA,eAAe,CAACK,GAAG,CAACC,IAAJ,CAASP,YAAV,CAAf;AACAG,QAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ;AAEAL,QAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,OAVH,EAWGC,KAXH,CAWS,MAAM;AACXZ,QAAAA,OAAO,CAACW,IAAR,CAAa,SAAb;AACD,OAbH;AAcD;AACF,GAjBQ,EAiBN,CAACZ,IAAD,EAAOC,OAAP,CAjBM,CAAT;AAmBAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,YAAY,IAAIE,SAApB,EAA+B;AAC7B,YAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCpB,QAAAA,KAAK,CACFa,IADH,CACQ,+BADR,EACyC;AACrCJ,UAAAA;AADqC,SADzC,EAIGK,IAJH,CAISC,GAAD,IAAS;AACbP,UAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAAST,WAAV,CAAd;AACAK,UAAAA,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASL,SAAV,CAAZ;AACD,SAPH,EAQGO,KARH,CAQS,MAAM;AACXZ,UAAAA,OAAO,CAACW,IAAR,CAAa,SAAb;AACD,SAVH;AAWD,OAZ2B,EAYzB,CAACN,SAAS,GAAG,EAAb,IAAmB,IAZM,CAA5B;AAcA,aAAO,MAAMU,aAAa,CAACF,QAAD,CAA1B;AACD;AACF,GAlBQ,EAkBN,CAACV,YAAD,EAAeE,SAAf,EAA0BL,OAA1B,CAlBM,CAAT;AAoBA,SAAOC,WAAP;AACD,CA9CD;;GAAMH,O;UACYD,U;;;AA+ClB,eAAeC,OAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst useAuth = (code: string | null) => {\n  const history = useHistory();\n  const [accessToken, setAccessToken] = useState<string>();\n  const [refreshToken, setRefreshToken] = useState<string>();\n  const [expiresIn, setExpiresIn] = useState<number>();\n\n  useEffect(() => {\n    if (code) {\n      axios\n        .post(\"http://localhost:6969/login\", {\n          code,\n        })\n        .then((res) => {\n          setAccessToken(res.data.accessToken);\n          setRefreshToken(res.data.refreshToken);\n          setExpiresIn(res.data.expiresIn);\n\n          history.push(\"/\");\n        })\n        .catch(() => {\n          history.push(\"/signin\");\n        });\n    }\n  }, [code, history]);\n\n  useEffect(() => {\n    if (refreshToken && expiresIn) {\n      const interval = setInterval(() => {\n        axios\n          .post(\"http://localhost:6969/refresh\", {\n            refreshToken,\n          })\n          .then((res) => {\n            setAccessToken(res.data.accessToken);\n            setExpiresIn(res.data.expiresIn);\n          })\n          .catch(() => {\n            history.push(\"/signin\");\n          });\n      }, (expiresIn - 60) * 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [refreshToken, expiresIn, history]);\n\n  return accessToken;\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}